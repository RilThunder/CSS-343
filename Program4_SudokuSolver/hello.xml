<?xml version="1.0"?>

<valgrindoutput>

    <protocolversion>4</protocolversion>
    <protocoltool>memcheck</protocoltool>

    <preamble>
        <line>Memcheck, a memory error detector</line>
        <line>Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.</line>
        <line>Using Valgrind-3.12.0.SVN and LibVEX; rerun with -h for copyright info</line>
        <line>Command: ./a.out</line>
    </preamble>

    <pid>30410</pid>
    <ppid>18755</ppid>
    <tool>memcheck</tool>

    <args>
        <vargv>
            <exe>/usr/bin/valgrind.bin</exe>
            <arg>--leak-check=full</arg>
            <arg>--track-origins=yes</arg>
            <arg>--xml-file=hello.xml</arg>
            <arg>--xml=yes</arg>
        </vargv>
        <argv>
            <exe>./a.out</exe>
        </argv>
    </args>

    <status>
        <state>RUNNING</state>
        <time>00:00:00:00.057</time>
    </status>

    <error>
        <unique>0x0</unique>
        <tid>1</tid>
        <kind>UninitCondition</kind>
        <what>Conditional jump or move depends on uninitialised value(s)</what>
        <stack>
            <frame>
                <ip>0x10B378</ip>
                <obj>/home/thuan/CSS-343/Program4/a.out</obj>
                <fn>SudokuFitness::howFit(std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;,
                    std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;&amp;)
                </fn>
                <dir>/home/thuan/CSS-343/Program4</dir>
                <file>SudokuFitness.cpp</file>
                <line>38</line>
            </frame>
            <frame>
                <ip>0x10B251</ip>
                <obj>/home/thuan/CSS-343/Program4/a.out</obj>
                <fn>SudokuFitness::howFit(Puzzle&amp;)</fn>
                <dir>/home/thuan/CSS-343/Program4</dir>
                <file>SudokuFitness.cpp</file>
                <line>14</line>
            </frame>
            <frame>
                <ip>0x109803</ip>
                <obj>/home/thuan/CSS-343/Program4/a.out</obj>
                <fn>main</fn>
                <dir>/home/thuan/CSS-343/Program4</dir>
                <file>main.cpp</file>
                <line>15</line>
            </frame>
        </stack>
        <auxwhat>Uninitialised value was created by a stack allocation</auxwhat>
        <stack>
            <frame>
                <ip>0x10B2BC</ip>
                <obj>/home/thuan/CSS-343/Program4/a.out</obj>
                <fn>SudokuFitness::howFit(std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;,
                    std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;&amp;)
                </fn>
                <dir>/home/thuan/CSS-343/Program4</dir>
                <file>SudokuFitness.cpp</file>
                <line>22</line>
            </frame>
        </stack>
    </error>

    <error>
        <unique>0x4</unique>
        <tid>1</tid>
        <kind>UninitCondition</kind>
        <what>Conditional jump or move depends on uninitialised value(s)</what>
        <stack>
            <frame>
                <ip>0x10B414</ip>
                <obj>/home/thuan/CSS-343/Program4/a.out</obj>
                <fn>SudokuFitness::howFit(std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;,
                    std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;&amp;)
                </fn>
                <dir>/home/thuan/CSS-343/Program4</dir>
                <file>SudokuFitness.cpp</file>
                <line>61</line>
            </frame>
            <frame>
                <ip>0x10B251</ip>
                <obj>/home/thuan/CSS-343/Program4/a.out</obj>
                <fn>SudokuFitness::howFit(Puzzle&amp;)</fn>
                <dir>/home/thuan/CSS-343/Program4</dir>
                <file>SudokuFitness.cpp</file>
                <line>14</line>
            </frame>
            <frame>
                <ip>0x109803</ip>
                <obj>/home/thuan/CSS-343/Program4/a.out</obj>
                <fn>main</fn>
                <dir>/home/thuan/CSS-343/Program4</dir>
                <file>main.cpp</file>
                <line>15</line>
            </frame>
        </stack>
        <auxwhat>Uninitialised value was created by a stack allocation</auxwhat>
        <stack>
            <frame>
                <ip>0x10B2BC</ip>
                <obj>/home/thuan/CSS-343/Program4/a.out</obj>
                <fn>SudokuFitness::howFit(std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;,
                    std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;&amp;)
                </fn>
                <dir>/home/thuan/CSS-343/Program4</dir>
                <file>SudokuFitness.cpp</file>
                <line>22</line>
            </frame>
        </stack>
    </error>

    <error>
        <unique>0x8</unique>
        <tid>1</tid>
        <kind>UninitCondition</kind>
        <what>Conditional jump or move depends on uninitialised value(s)</what>
        <stack>
            <frame>
                <ip>0x10B52E</ip>
                <obj>/home/thuan/CSS-343/Program4/a.out</obj>
                <fn>SudokuFitness::howFit(std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;,
                    std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;&amp;)
                </fn>
                <dir>/home/thuan/CSS-343/Program4</dir>
                <file>SudokuFitness.cpp</file>
                <line>87</line>
            </frame>
            <frame>
                <ip>0x10B251</ip>
                <obj>/home/thuan/CSS-343/Program4/a.out</obj>
                <fn>SudokuFitness::howFit(Puzzle&amp;)</fn>
                <dir>/home/thuan/CSS-343/Program4</dir>
                <file>SudokuFitness.cpp</file>
                <line>14</line>
            </frame>
            <frame>
                <ip>0x109803</ip>
                <obj>/home/thuan/CSS-343/Program4/a.out</obj>
                <fn>main</fn>
                <dir>/home/thuan/CSS-343/Program4</dir>
                <file>main.cpp</file>
                <line>15</line>
            </frame>
        </stack>
        <auxwhat>Uninitialised value was created by a stack allocation</auxwhat>
        <stack>
            <frame>
                <ip>0x10B2BC</ip>
                <obj>/home/thuan/CSS-343/Program4/a.out</obj>
                <fn>SudokuFitness::howFit(std::vector&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt;,
                    std::allocator&lt;std::vector&lt;int, std::allocator&lt;int&gt; &gt; &gt; &gt;&amp;)
                </fn>
                <dir>/home/thuan/CSS-343/Program4</dir>
                <file>SudokuFitness.cpp</file>
                <line>22</line>
            </frame>
        </stack>
    </error>


    <status>
        <state>FINISHED</state>
        <time>00:00:00:02.963</time>
    </status>

    <error>
        <unique>0xc</unique>
        <tid>1</tid>
        <kind>Leak_DefinitelyLost</kind>
        <xwhat>
            <text>8 bytes in 1 blocks are definitely lost in loss record 1 of 1</text>
            <leakedbytes>8</leakedbytes>
            <leakedblocks>1</leakedblocks>
        </xwhat>
        <stack>
            <frame>
                <ip>0x4C2D1AF</ip>
                <obj>/usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
                <fn>operator new(unsigned long)</fn>
            </frame>
            <frame>
                <ip>0x1097DA</ip>
                <obj>/home/thuan/CSS-343/Program4/a.out</obj>
                <fn>main</fn>
                <dir>/home/thuan/CSS-343/Program4</dir>
                <file>main.cpp</file>
                <line>14</line>
            </frame>
        </stack>
    </error>

    <errorcounts>
        <pair>
            <count>4</count>
            <unique>0x8</unique>
        </pair>
        <pair>
            <count>4</count>
            <unique>0x4</unique>
        </pair>
        <pair>
            <count>4</count>
            <unique>0x0</unique>
        </pair>
    </errorcounts>

    <suppcounts>
    </suppcounts>

</valgrindoutput>

